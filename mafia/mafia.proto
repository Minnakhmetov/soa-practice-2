syntax = "proto3";
package mafia;

option go_package = "github.com/Minnakhmetov/soa-practice-2/mafia";

service Mafia {
    rpc Login(LoginRequest) returns (stream LoginResponse);
    rpc EndTurn(EndTurnRequest) returns (EndTurnResponse);
    rpc VoteAgainst(VoteAgainstRequest) returns (VoteAgainstResponse);
    rpc Shoot(ShootRequest) returns (ShootResponse);
    rpc Check(CheckRequest) returns (CheckResponse);
    rpc PublishCheckResult(PublishCheckResultRequest) returns (PublishCheckResultResponse);
    rpc GetAlivePlayers(GetAlivePlayersRequest) returns (GetAlivePlayersResponse);
}

message LoginResponse {
    oneof event {
        PhaseChange phase_change = 1;
        NewMessage new_message = 2;
        RoleAssignment role_assignment = 3;
        NewBrokerChannel new_broker_channel = 4;
    }

    message NewBrokerChannel {
        string name = 1;
    }

    message PhaseChange {
        string new_phase = 1;
    }

    message NewMessage {
        string text = 1;
    }

    message RoleAssignment {
        string role = 1;
    }
}

message LoginRequest {}

message EndTurnRequest {}

message EndTurnResponse {}

message VoteAgainstRequest {
    string target = 1;
}

message VoteAgainstResponse {}

message ShootRequest {
    string target = 1;
}

message ShootResponse {}

message CheckRequest {
    string target = 1;
}

message CheckResponse {}

message PublishCheckResultRequest {}

message PublishCheckResultResponse {}

message GetAlivePlayersRequest {}

message GetAlivePlayersResponse {
    repeated string alivePlayers = 1;
}

